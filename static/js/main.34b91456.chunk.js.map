{"version":3,"sources":["components/Input.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","useState","text","setText","className","theme","headingText","placeholder","value","onChange","event","target","id","rows","style","backgroundColor","color","disabled","length","onClick","temp","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","filter","element","Navbar","href","titleText","type","changeMode","cursor","htmlFor","Alert","height","alert","role","xmlns","gfill","viewBox","width","d","msg","defaultProps","aboutText","App","setTheme","setAlert","document","body","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34b91456.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Input(props) {\r\n    const convertToUpper = () => {\r\n        let temp = text.toUpperCase();\r\n        setText(temp);\r\n\r\n        props.showAlert('Converted to uppercase!!', 'success');\r\n    }\r\n\r\n    const convertToLower = () => {\r\n        let temp = text.toLowerCase();\r\n        setText(temp);\r\n\r\n        props.showAlert('Converted to lowercase!!', 'success');\r\n    }\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert('Coppied to clipboard!!', 'success');\r\n\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n\r\n        props.showAlert('Extra spaces has been removed!!', 'success');\r\n    }\r\n\r\n    // const toOriginaltext = () => {\r\n    //     setText(originalText);\r\n\r\n    //     props.showAlert('Converted to original text!!','warning');\r\n    // }\r\n\r\n    const clearText = () => {\r\n        let temp = '';\r\n        setText(temp);\r\n\r\n        props.showAlert('Text cleared!!', 'danger');\r\n    }\r\n\r\n    const handleOnchange = (event) => {\r\n        setText(event.target.value);\r\n\r\n        // let temp = event.target.value;\r\n        // setoriginalText(temp);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // const [originalText, setoriginalText] = useState(text);\r\n    return (\r\n        <>\r\n            <h1 className={`text-${props.theme === 'light' ? 'dark' : 'light'}`}>{props.headingText}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" placeholder=\"Enter text here...\" value={text} onChange={handleOnchange} id=\"userInputArea\" rows=\"10\" style={{ backgroundColor: props.theme === 'light' ? 'white' : '#090d38', color: props.theme === 'light' ? 'black' : 'white' }}></textarea>\r\n            </div>\r\n            <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={convertToUpper}>Convert to Uppercase</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={convertToLower}>Convert to Lowercase</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={copyToClipboard}>Copy to clipboard</button>\r\n            <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={removeExtraSpaces}>Remove extra spaces</button>\r\n            {/* <button className=\"btn btn-primary mx-2\" onClick={toOriginaltext}>Reset</button> */}\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2\" onClick={clearText}>Clear</button>\r\n            <div className={`container my-4 px-0 text-${props.theme === 'light' ? 'dark' : 'light'}`}>\r\n                <h3>Your text summary</h3>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} minutes read</p>\r\n                {/* <p>{wordCounter} words and {text.length} characters</p> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {\r\n//     // BrowserRouter as Router,\r\n//     // Switch,\r\n//     // Route,\r\n//     a\r\n//   } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.titleText}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-a\" href=\"/about\">About</a>\r\n                            </li> */}\r\n                        </ul>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.changeMode} style={{cursor: 'pointer'}}/>\r\n                            <label className={`form-check-label text-${props.theme==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" style={{cursor: 'pointer'}}>Dark</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    titleText: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    titleText: 'Title goes here',\r\n    aboutText: 'about goes here'\r\n};","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{ height: '50px' }}>{\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" gfill=\"currentColor\" viewBox=\"0 0 16 16\" className=\"bi flex-shrink-0 me-2 mb-1\" width=\"24\" height=\"24\" role=\"img\" aria-label=\"Info:\"><path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/></svg>{props.alert.msg}\r\n                {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Input from './components/Input';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [theme, setTheme] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n      document.body.style.backgroundColor = '#090d38';\n    }\n    else {\n      setTheme('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1700);\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar titleText=\"TextUtils\" aboutText=\"About\" theme={theme} changeMode={toggleTheme} />\n        <Alert alert={alert} />\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n                <About theme={theme} />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <div className=\"container my-3\">\n              <Input headingText=\"Enter your text to analyze\" theme={theme} showAlert={showAlert} />\n            </div>\n          {/* </Route> */}\n        {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}